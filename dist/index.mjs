import{useCallback as g,createContext as v,useContext as f,useState as R,useEffect as C}from"react";import{jsx as i}from"react/jsx-runtime";var u=typeof window<"u",P=()=>u?window.location.pathname:"/",d=v({path:P(),navigate:()=>{console.warn("RouterContext usado fuera de RouterProvider")}});function h({routes:n,children:o,layout:a}){let[t,r]=R(P());C(()=>{if(!u)return;let e=()=>r(window.location.pathname);return window.addEventListener("popstate",e),()=>window.removeEventListener("popstate",e)},[]);let s=g(e=>{if(!u){r(e);return}if(typeof e!="string"||e.includes("javascript:")||e.includes("data:")){console.warn("MichiRouter: URL potencialmente insegura bloqueada:",e);return}window.history.pushState({},"",e),r(e)},[]),l=n.find(e=>e.path===t),c=l?l.component:o;try{return i(d.Provider,{value:{path:t,navigate:s},children:a?i(a,{children:c}):c})}catch(e){return console.error("Error en RouterProvider:",e),i("div",{children:"Error en el enrutador. Consulta la consola para m\xE1s detalles."})}}var w=({to:n,children:o,className:a,...t})=>{let{navigate:r}=f(d);return i("a",{href:n,className:a,onClick:s=>{s.preventDefault(),r(n)},...t,children:o})},p=()=>{let{navigate:n}=f(d);return n};import{useEffect as x}from"react";import{Fragment as y,jsx as L}from"react/jsx-runtime";function m({children:n,configObject:o}){let a=p(),t={states:o?.states||{user:null,isLoading:!1},redirectionPath:o?.redirectionPath||"/",loadingComponent:o?.loadingComponent||null,defaultMessage:o?.defaultMessage||void 0};if(!o?.states)return console.error(`Componente Protected: El objeto de configuraci\xF3n es inv\xE1lido. Este es el formato esperado:
{
  states: { user: any; isLoading: boolean };
  redirectionPath: string;
  loadingComponent?: React.ReactNode;
  defaultMessage?: string;
}`),null;let{user:r,isLoading:s}=t.states;return x(()=>{!s&&!r&&a(t.redirectionPath)},[s,r,a,t.redirectionPath]),s?t.loadingComponent?t.loadingComponent:t.defaultMessage?L(y,{children:t.defaultMessage}):null:r?n:null}export{w as Link,m as Protected,h as RouterProvider,p as useNavigate};
